on:
  push:
    branches: [main]
  release:
    types:
      - published

jobs:
  setup:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Send telegram message on push
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.6.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - run: npm install
        working-directory: ./backend

      - run: npm run test
        working-directory: ./backend
        env:
          APP_NAME: ${{ secrets.APP_NAME }}
          PORT: ${{ secrets.PORT }}
          MONGO_DB_URL: ${{ secrets.MONGO_DB_URL }}
          SESSION_SECRET_KEY: ${{ secrets.SESSION_SECRET_KEY }}
          ENABLE_LOGGING: ${{ secrets.ENABLE_LOGGING }}
          CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}
          GCP_API_KEY: ${{ secrets.GCP_API_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SELL_BOOK_CONFIRM_BASE_URL: ${{ secrets.SELL_BOOK_CONFIRM_BASE_URL }}

      - run: rm -r .nyc_output node_modules build
        working-directory: ./backend

      - name: Send telegram message with status
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            New status ${{ job.status }} for ${{ github.job }} of ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Docker meta nginx
        id: docker_meta_nginx
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: riccardobusetti/books-nginx
          tag-sha: true
          tag-edge: false
          tag-latest: true

      - name: Docker meta backend
        id: docker_meta_backend
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: riccardobusetti/books-backend
          tag-sha: true
          tag-edge: false
          tag-latest: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push nginx image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.docker_meta_nginx.outputs.tags }}
          file: ./nginx/Dockerfile
          context: ./nginx

      - name: Build and push backend image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.docker_meta_backend.outputs.tags }}
          file: ./backend/Dockerfile
          context: ./backend

      - name: Generate build number
        id: build_number
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.REPOSITORY_TOKEN }}

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          application_name: ${{ secrets.AWS_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_ENVIRONMENT_NAME }}
          version_label: "books-deployment-${{ steps.build_number.outputs.build_number }}"
          region: eu-central-1
          deployment_package: deploy.zip

      - name: Send telegram message with status
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            New status ${{ job.status }} for ${{ github.job }} of ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
